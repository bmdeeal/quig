
--background stuff
current={r=128, g=128, b=128}
target={r=128, g=128, b=128}
width=68 --how far to change the colors from the center color
speed=0.25 --how much to change the color by every frame
center=72 --the center color

--get the sign of a number, either negative, positive, or zero
--this really should have been in Lua's standard math library
function sign(n)
	if n>0 then
		return 1
	elseif n<0 then
		return -1
	else
		return 0
	end
end

--a small player object you can move around
player={
	--position
	x=view_width/2,
	y=view_height/2,
	--delta speed, gets added each frame
	xd=0,
	yd=0,
	--top speed for each direction
	maxspeed_x=1.5,
	maxspeed_y=4,
	--physics
	friction=0.1, --how much to slow down
	accel=0.2, --how much to speed up by during input
	gravity=0.2, --how quickly do you fall
	jump=3, --how high to jump
	--floor stuff
	ground=false, --are we on the ground?
	ground_level=view_height-16, --how high/low is the ground
	ground_width=96 -- how wide is the ground area
}

--update the player object
player.update=function(self)
	--apply physics
	self.yd=self.yd+self.gravity --fall with gravity
	self.xd=self.xd-sign(self.xd)*self.friction --slow down due to friction
	if math.abs(self.xd) < self.accel-self.friction then self.xd=0 end --make it so you actually stop due to friction
	--apply input
	--left/right movement
	if key(key_left)>0 then
		self.xd=self.xd-self.accel
	end
	if key(key_right)>0 then
		self.xd=self.xd+self.accel
	end
	--jumping
	if self.ground==true and key(key_a)==1 then
		self.yd=-self.jump
	end
	--limit the player's speed
	if self.xd>self.maxspeed_x then self.xd=self.maxspeed_x end
	if self.yd>self.maxspeed_y then self.yd=self.maxspeed_y end
	if self.xd<-self.maxspeed_x then self.xd=-self.maxspeed_x end
	if self.yd<-self.maxspeed_y then self.yd=-self.maxspeed_y end
	--move the player
	self.x=self.x+self.xd
	self.y=self.y+self.yd
	--limit the player's position to how high the ground is
	if self.y>self.ground_level-8 then
		self.y=self.ground_level-8
		self.yd=0
		self.ground=true
	else
		self.ground=false
	end
	--limit the player's position to the width of the ground
	local wallpos_r=view_width/2+self.ground_width/2-8
	local wallpos_l=view_width/2-self.ground_width/2+8
	if self.x>wallpos_r then
		self.xd=0
		self.x=wallpos_r
	end
	if self.x<wallpos_l then
		self.xd=0
		self.x=wallpos_l
	end
end

--draw the player and ground
player.draw=function(self)
	--the player is just the background color darkened, clamped to 0 (if you don't clamp it after subtracting, colors will wrap around from dark to bright)
	squ(self.x, self.y, 1, math.max(0,current.r-20),math.max(0,current.g-20),math.max(0,current.b-20))
	--draw the floor in a similar manner
	rect(view_width/2-self.ground_width/2, self.ground_level, self.ground_width, 4, math.max(0,current.r-40),math.max(0,current.g-40),math.max(0,current.b-40))
end

--smoothly change the background color to random ones
current.update=function(self)
	if self.r>target.r then
		self.r=self.r-speed
	elseif self.r<target.r then
		self.r=self.r+speed
	elseif self.r==target.r then
		target.r=math.random(center-width,center+width)
	end
	if self.g>target.g then
		self.g=self.g-speed
	elseif self.g<target.g then
		self.g=self.g+speed
	elseif self.g==target.g then
		target.g=math.random(center-width,center+width)
	end
	if self.b>target.b then
		self.b=self.b-speed
	elseif self.b<target.b then
		self.b=self.b+speed
	elseif self.b==target.b then
		target.b=math.random(center-width,center+width)
	end
end

function init()
end

--draw text with a drop shadow
function shadowtext(s,x,y)
	text(s,x+1,y+1,1,2)
	text(s,x,y,1,3)
end

function step()
	--change the background color slowly
	cls(current.r,current.g,current.b)
	--add a darkened gradient to the color behind the text
	local steps=36
	local block_size=2
	local change_amount=4
	for ii=0,steps do
		local darken_r=math.max(0,current.r-(steps-ii)*change_amount)
		local darken_g=math.max(0,current.g-(steps-ii)*change_amount)
		local darken_b=math.max(0,current.b-(steps-ii)*change_amount)
		rect(0, ii*block_size, view_width, block_size, darken_r, darken_g, darken_b)
	end
	--add a brightened gradient to the color beneath the text
	for ii=0,steps do
		local brighten_r=math.min(255,current.r+ii*change_amount)
		local brighten_g=math.min(255,current.g+ii*change_amount)
		local brighten_b=math.min(255,current.b+ii*change_amount)
		rect(0, view_height-(steps-ii)*block_size, view_width, block_size, brighten_r, brighten_g, brighten_b)
	end
	--update the background color
	current:update()
	--draw the intro message
	shadowtext("Welcome to quig!\n\nTry some of the example games\nin the examples folder, or\ncreate your own.\n\nTo learn how to make your own\ngames, read get-the-dot.txt.\n\nHave fun!\n--B.M.Deeal",0,0)
	--update and draw the player
	player:update()
	player:draw()
end